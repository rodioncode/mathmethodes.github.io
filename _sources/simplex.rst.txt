
Симплекс метод
=========================================================================================

.. toctree::
   :maxdepth: 2
   

Введение дополнительных переменных в систему ограничений
--------------------------------------------------------

В предыдущем параграфе для решения ОЗЛП был применен графический метод.
В общем случае ОЗЛП решается с помощью симплекс-метода, к изложению
которого мы сейчас и переходим.

Рассмотрим ОЗЛП с системой ограничений в следующей форме:

.. math::

   \begin{cases}
              {a_{11}x_1+a_{12}x_2+...+a_{1n}x_n}\leq b_1,\\
              {a_{21}x_1+a_{22}x_2+...+a_{2n}x_n}\leq b_2,\\
              ............................................\\
              {a_{m1}x_1+a_{m2}x_2+...+a_{mn}x_n}\leq b_m,
   \end{cases}

Если ввести в систему ограничений дополнительные переменные

:math:`x_{n+1}`, :math:`x_{n+2}`, ..., :math:`x_{n+m}`

по формулам

.. math::

   \begin{cases}
              x_{n+1}=b_1-{a_{11}x_1+a_{12}x_2+...+a_{1n}x_n},\\
              x_{n+2}=b_2-{a_{21}x_1+a_{22}x_2+...+a_{2n}x_n},\\
              ..................................................\\
              x_{n+m}=b_m-{a_{m1}x_1+a_{m2}x_2+...+a_{mn}x_n},\\
           \end{cases}

то система ограничений преобразуется в систему уравнений

.. math::

   \begin{cases}
              {a_{11}x_1+a_{12}x_2+...+a_{1n}x_n}=b_1,\\
              {a_{21}x_1+a_{22}x_2+...+a_{2n}x_n}=b_2,\\
              ........................................\\
              {a_{m1}x_1+a_{m2}x_2+...+a_{mn}x_n}=b_m,\\
           \end{cases}

имеющую специальный вид. В этой системе каждая из переменных
:math:`x_{n+1}`, :math:`x_{n+2}`, ..., :math:`x_{n+m}` 

исключена из всех
уравнений, за исключением одного уравнения, в котором коэффициент при
ней равен 1.

Преобразование системы уравнений методом полных жордановых исключений
---------------------------------------------------------------------

Заметив, что мы ввели дополнительные переменные в систему ограничений
таким образом, что при любом допустимом плане они оказались
неотрицательными числами, перейдем к преобразованию системы уравнений с
помощью метода, который носит название метода полных жордановых
исключений.

Для системы уравнений назовем переменные 
:math:`x_1`, :math:`x_2`, ..., :math:`x_n` свободными, 
а переменные :math:`x_{n+1}`, :math:`x_{n+2}`,..., :math:`x_{n+m}` - базисными.

Разделение переменных на свободные и базисные является условным,
поскольку систему уравнений можно переписать в другом (эквивалентном)
виде, где наборы свободных и базисных переменных будут иными. В
частности, можно поменять ролями какую - нибудь свободную переменную
:math:`x_r` с некоторой базисной переменной. С этой целью совершим
следующие операции:

#. Рассмотрим какое-нибудь уравнение системы, в котором коэффициент
   :math:`a_{sr}` при переменной :math:`x_{r}` отличен от 0 (это
   уравнение с номером s).

#. Разделим это уравнение на :math:`a_{sr}`. Тогда в нем коэффициент при
   пере- менной :math:`x_{r}` станет равным 1.

#. Вычтем из каждого i-го уравнения системы (i :math:`\ne`\ s)
   уравнение с номером s, умноженное на :math:`a_{sr}`.
   В результате переменная :math:`x_{r}` будет исключена из всех
   уравнений системы, кроме уравнения с номером s, и станет базисной,
   а переменная :math:`x_{n+s}` станет свободной.

Описанный процесс носит название полного жорданова исключения с
разрешающим элементом :math:`a_{sr}`. Коэффициенты s-го уравнения
системы называются разрешающей строкой, а элементы r-го столбца матрицы
системы уравнений - разрешающим столбцом.

Удобный алгоритм пересчета коэффициентов системы уравнений при
проведении полного жорданова исключения с разрешающим элементом
:math:`a_{sr}` состоит в следующем (здесь и далее верхний индекс «н»
соответствует новому значению элемента матрицы, а верхний индекс «с» -
старому значению):

#. Разделим элементы разрешающей строки на разрешающий элемент. При этом
   разрешающий элемент станет равным 1;

#. Все элементы разрешающего столбца, за исключением разрешающего
   элемента, заменим нулями. При этом разрешающий элемент останется
   равным 1.

#. Все остальные элементы матрицы пересчитаем в новые элементы

:math:`a_{ij}^H`\ =\ :math:`\frac{a_{ij}^C \cdot a_{sr}^C-a_{sj}^C\cdot a_{ir}^C}{a_{sr}^C}`

воспользовавшись «правилом прямоугольника»

.. figure::  pictures/47.png
   :align:   center

   Рисунок 1


В случае, когда в разрешающей строке (разрешающем столбце) есть нули,
правило прямоугольника приводит к тому, что элементы столбцов (строк),
пересекающих эти нули, остаются без изменения.

Понятие опорного плана
----------------------

-  Базисным решением ОЗЛП называется такое решение системы уравнений, в
   котором все свободные переменные равны 0.

-  Базисное решение ОЗЛП называется опорным решением (опорным планом),
   если в нем все базисные переменные неотрицательны.

-  В теории симплекс-метода доказывается, что, если максимум целевой
   функции при данной в ОЗЛП системе ограничений существует, то он
   достигается на опорном решении.

-  Опорное решение, на котором целевая функция достигает максимума,
   является оптимальным планом.

Замечание. Не следует думать, что ОЗЛП всегда имеет решение. Система
ограничений, например, может быть противоречивой и задавать пустое
множество решений. Система ограничений может также задавать
неограниченное множество, на котором функция прибыли является
неограниченной.

Расчетный алгоритм симплекс-метода
----------------------------------

Алгоритм симплекс-метода состоит из нескольких этапов: сначала
происходит построение одного из опорных решений, а затем - «улучшение»
этого решения, т.е. переход к другим опорным решениям, на которых
значениецелевой функции не уменьшается. Для проведения расчетов
используются симплекс-таблицы, составленные по коэффициентам системы, а
процесс поиска и улучшения опорного решения заключается в пересчете
элементов этих таблиц методом полных жордановых исключений.

Первый этап алгоритма. Формирование симплекс-таблицы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Составим первую симплекс-таблицу по системе и целевой функции.

.. figure::  pictures/Screenshot_2.png
   :align:   center


Для каждого уравнения системы в первом столбце таблицы указывается
соответствующая базисная переменная. Строка z называется целевой
строкой. Строка :math:`\varphi` добавляется в таблицу лишь в случае
поиска опорного решения и называется фиктивной целевой строкой.
Последний столбец таблицы (столбец :math:`\Xi`) организован для контроля
правильности вычислений, и в каждой его клетке будем записывать суммы
чисел, стоящих в строке.

Таблице соответствует базисное решение системы вида

:math:`x_1`\ =\ :math:`x_2`\ =...=\ :math:`x_n`\ =0,

:math:`x_{n+1}`\ =\ :math:`b_1`, :math:`x_{n+2}`\ =\ :math:`b_2`, ...,

:math:`x_{n+m}`\ =\ :math:`b_m`.

Возможны два случая:

#. Все числа :math:`b_1`, :math:`b_2`, ..., :math:`b_m` неотрицательны,
   т.е. решение является опорным. В этом случае строку :math:`\varphi` в
   таблице не заводим и сразу переходим ко 2-му этапу.

#. Среди чисел :math:`b_1`, :math:`b_2`, ..., :math:`b_m` существуют
   отрицательные, т.е. решение не является опорным. Тогда для построения
   опорного решения запишем в строку :math:`\varphi` сумму тех строк
   таблицы, где стоят отрицательные значения :math:`b_i`, а затем
   перейдем к анализу и улучшению решения по фиктивной целевой строке
   :math:`\varphi`.

Второй этап алгоритма. Анализ решения по целевой (фиктивной целевой) строке симплекс-таблицы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Рассмотрим элементы целевой (фиктивной целевой) строки, стоящие в
столбцах :math:`x_1`, ..., :math:`x_{n+m}`. Если среди них имеется хотя
бы один отрицательный элемент, то решение надо улучшать по правилам
этапа 3.

Если же все указанные элементы неотрицательны, то в случае, когда
анализируется опорное решение по целевой строке z, это означает, что на
этом решении функция z достигает максимума и нужно переходить к
выписыванию соответствующего оптимального плана (этап 4).

В случае поиска опорного решения (анализ по фиктивной целевой строке
:math:`\varphi`) вся строка :math:`\varphi` должна состоять из нулей,
иначе система ограничений противоречива, и ОЗЛП не имеет решения.
Получение же нулевой строки :math:`\varphi` свидетельствует о том, что
опорное решение построено. В этом случае фиктивная целевая строка
удаляется из таблицы, а решение анализируется по целевой строке z.

Третий этап алгоритма. Улучшение решения по целевой (фиктивной целевой) строке симплекс-таблицы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. Найдем среди элементов :math:`z_1`, :math:`z_2`, ..., :math:`z_n`
   целевой строки z (или среди элементов :math:`\phi_1`, :math:`\phi_2`,
   ..., :math:`\phi_n` в случае фиктивной целевой строки :math:`\phi`)
   наибольший по абсолютной величине отрицательный элемент. Пусть это
   будет элемент :math:`z_r` (или :math:`\phi_r`), тогда столбец
   :math:`x_r` объявим разрешающим.

#. Найдем среди дробей вида :math:`\frac{b_i}{a_{ir}}` (i=1,2,..., m)
   наименьшую неотрицательную дробь (пусть это будет дробь
   :math:`\frac{b_s}{a_{sr}}`), и объявим строку :math:`x_{n+s}`
   разрешающей. Если же все дроби вида :math:`\frac{b_i}{a_{ir}}`
   окажутся отрицательными, то это означает, что при заданной системе
   ограничений функция z неограничена,т.е. поставленная ОЗЛП решений не
   имеет.

#. Элемент :math:`a_{sr}`, стоящий на пересечении разрешающей строки и
   разрешающего столбца, объявим разрешающим, и, для наглядности, его
   можно обвести в таблице прямоугольником.

   Замечание. Иногда существует несколько возможностей выбора
   разрешающего элемента. В этом случае для поиска опорного решения
   разрешающий элемент выбирают отрицательным.

#. Заготовим новую симплекс-таблицу, заменив в первом столбце переменную
   :math:`x_{n+s}` на переменную :math:`x_r`.

#. Пересчитаем все элементы старой симплекс-таблицы, включая строки z и
   :math:`\phi`, а также столбец :math:`\sum`, по правилам метода полных
   жордановых исключений с разрешающим элементом :math:`a_{sr}`.
   Результат запишем в новую симплекс-таблицу.

   Контроль правильности вычислений осуществляем при помощи сравнений
   сумм элементов каждой строки с числами, записанными в последнем
   столбце :math:`\sum`. Расхождение результатов свидетельствует об
   арифметической ошибке, и соответствующую строку надо пересчитать.

   После этого возвращаемся к этапу 2.

Четвертый этап алгоритма. Запись оптимального плана
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

В плане указываем значения только исходных переменных :math:`x_1`,
:math:`x_2`, ..., :math:`x_n`, причем значения тех из них, которые
являются свободными, полагаем равными нулю, а значения остальных
переменных берем из второго столбца таблицы (столбца свободных членов).
Из этого же столбца выписываем максимальное значение z.

Практическое применение симплекс-метода
---------------------------------------

Пример решения типовой задачи с помощью симплекс-метода
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Задача:** Составляется комбинированный корм из трех злаков: кукурузы,
овса и ржи. Калорийность и содержание витамина С в одном кг каждого
злака, а также цена одного кг каждого злака указаны в следующей таблице
1:

| *Таблица 1*

.. raw:: latex

   \centering

+---------------+-----+-----+------+
|               |     |     | Рожь |
+===============+=====+=====+======+
| Ккал          | 200 | 175 | 100  |
+---------------+-----+-----+------+
| Витамин С (г) | 5   | 1   | 3    |
+---------------+-----+-----+------+
| Цена (руб.)   | 6   | 4   | 1    |
+---------------+-----+-----+------+

Требуется составить наиболее дешевый комбинированный корм, 1кг которого
содержал бы не менее 125 ккал и не менее 2 г витамина С. **Решение:**
Обозначим содержание кукурузы, овса и ржи в 1кг комбикорма символами
:math:`x_1`, :math:`x_2` и :math:`x_3` (кг), соответственно. По условию
задачи эти переменные удовлетворяют следующей системе ограничений:

.. math::

   \begin{cases}
               x_1+x_2+x_3=1,\\
               200x_1+175x_2+100x_3 \geq125,\\
               5x_1+x_2+3x_3 \geq2,\\
               x_1 \geq 0, x_2 \geq 0 и x_3 \geq 0\\
           \end{cases}

Требуется найти план, доставляющий минимум функции затрат

R=6\ :math:`x_1` \ +4\ :math:`x_2` \ +\ :math:`x_3 \to` min.

Решим поставленную задачу с помощью симплекс-метода. Для этого перепишем
систему ограничений в следующем виде:

.. math::

   \begin{cases}
               x_1+x_2+x_3=1,\\
               -8x_1-7x_2-4x_3 \leq-5,\\
               -5x_1-x_2-3x_3 \leq-2\\
    \end{cases}

Введя дополнительные переменные :math:`x_4` и :math:`x_5`, преобразуем
систему в систему уравнений

.. math::

   \begin{cases}
               x_1+x_2+x_3=1,\\
               -8x_1-7x_2-4x_3 =-5,\\
               -5x_1-x_2-3x_3 =-2\\
   \end{cases}

Приведем систему к специальному виду, исключив переменную :math:`x_3`
из второго и третьего уравнений:

.. math::

   \begin{cases}
               x_1+x_2+x_3=1,\\
               -4x_1-3x_2+x_4=-1,\\
               -2x_1+2x_2+x_5=1\\
   \end{cases}

Будем искать решение, доставляющее максимум функции прибыли

z=-6\ :math:`x_1` -4 :math:`x_2` - :math:`x_3` \ =-1-5\ :math:`x_1` -3 :math:`x_2 \to` \ max.

Составим первую симплекс-таблицу (Таблица 2).

| *Таблица 2*

.. raw:: latex

   \centering

+--------------+----+----+-------------+-------------+-------------+-------------+--------------+
|              |    |    | :math:`x_2` | :math:`x_3` | :math:`x_4` | :math:`x_5` | :math:`\sum` |
+==============+====+====+=============+=============+=============+=============+==============+
| :math:`x_3`  | 1  | 1  | 1           | 1           | 0           | 0           | 4            |
+--------------+----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`x_4`  | -1 | -4 | -3          | 0           | 1           | 0           | -7           |
+--------------+----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`x_5`  | 1  | -2 | 2           | 0           | 0           | 1           | 2            |
+--------------+----+----+-------------+-------------+-------------+-------------+--------------+
| z            | -1 | 5  | 3           | 0           | 0           | 0           | 7            |
+--------------+----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`\phi` | -1 | -4 | -3          | 0           | 1           | 0           | -7           |
+--------------+----+----+-------------+-------------+-------------+-------------+--------------+

Поскольку базисное решение

:math:`x_1`\ =\ :math:`x_2`\ =0, :math:`x_3`\ =1, :math:`x_4`\ =-1,
:math:`x_5`\ =1

не является опорным (:math:`x_4`\ <0), то для поиска опорного решения в
симплекстаблицу добавляется фиктивная целевая строка :math:`\phi`, в
которую записывается строка :math:`x_4`.

В столбец :math:`\sum` запишем суммы чисел, стоящие по строкам таблицы.

В строке :math:`\phi` среди чисел -4, -3, 0, 1, 0 наибольшим по
абсолютной величине отрицательным числом является число -4, поэтому
разрешающим столбцом объявляем столбец :math:`x_1`. Для элементов
таблицы, расположенных в строках :math:`x_3`, :math:`x_4` и :math:`x_5`,
рассмотрим дроби

:math:`\frac{1}{1}`\ =1, :math:`\frac{-1}{-4}`\ =0,25 и
:math:`\frac{1}{-2}`\ =-0,5

числители которых являются элементами второго столбца таблицы, а
знаменатели - элементами разрешающего столбца. Наименьшей
неотрицательной дробью является дробь 0,25, поэтому строка :math:`x_4`
объявляется разрешающей строкой. Таким образом, элемент таблицы, стоящий
на пересечении строки :math:`x_4` и столбца :math:`x_1` (число -4)
является разрешающим элементом.

Теперь пересчитаем все элементы Таблицы 2 по правилам метода полных
жордановых исключений с разрешающим элементом -4. Получим следующую
Таблицу 3:

| *Таблица 3*

.. raw:: latex

   \centering

+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+
|              |     |    | :math:`x_2` | :math:`x_3` | :math:`x_4` | :math:`x_5` | :math:`\sum` |
+==============+=====+====+=============+=============+=============+=============+==============+
| :math:`x_3`  |0,75 | 0  | 0,25        | 1           | 0,25        | 0           | 2,25         |
+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`x_4`  |0,25 | 1  | 0,75        | 0           | -0,25       | 0           | 1,75         |
+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`x_5`  |1,5  | 0  | 3,5         | 0           | -0,5        | 1           | 5,5          |
+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+
| z            |-2,25|   0|   -0,75     | 0           | 1,25        | 0           | -1,75        |
+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+
| :math:`\phi` | 0   | 0  |    0        | 0           | 0           | 0           | 0            |
+--------------+-----+----+-------------+-------------+-------------+-------------+--------------+

Так как строка :math:`\phi` стала нулевой, то опорное решение получено.
Исключим строку :math:`\phi` из таблицы и проведем анализ по целевой
строке z.

Среди чисел 0; -0,75; 0; 1,25; 0 наибольшим по абсолютной величине
отрицательным числом является число -0,75, поэтому разрешающим столбцом
объявляем столбец :math:`x_2`. Для элементов таблицы, расположенных в
строках :math:`x_3`, :math:`x_1`, и :math:`x_5`, рассмотрим дроби

:math:`\frac{0,75}{0,25}`\ =3,
:math:`\frac{0,25}{0,75}`\ =\ :math:`\frac{1}{3}` и
:math:`\frac{1,5}{3,5}`\ =\ :math:`\frac{3}{7}`

числители которых являются элементами второго столбца таблицы, а
знаменатели - элементами разрешающего столбца. Наименьшей
неотрицательной дробью является дробь :math:`\frac{1}{3}`, поэтому
строка :math:`x_1` объявляется разрешающей строкой.

Таким образом, элемент таблицы, стоящий на пересечении строки
:math:`x_1` и столбца :math:`x_2` (число 0,75) является разрешающим
элементом.

Теперь пересчитаем все элементы Таблицы 3 в новую симплекс-таблицу по
правилам метода полных жордановых исключений с разрешающим элементом
0,75. Получим следующую Таблицу 4:

| *Таблица 4*

.. figure::  pictures/Screenshot_3.png
   :align:   center


В строке z среди чисел 1; 0; 0; 1; 0 нет отрицательных. Значит, максимум
z достигнут, и можно выписать оптимальный план:

:math:`x_1`\ =0, :math:`x_2`\ =\ :math:`\frac{1}{3}`,
:math:`x_3`\ =\ :math:`\frac{2}{3}`

Максимальное значение целевой функции z равно -2, а минимальное значение
функции затрат R равно 2.

**Ответ:** Оптимальным является комбикорм, состоящий на
:math:`\frac{1}{3}` из овса и на :math:`\frac{2}{3}` изо ржи.


Перейти к практике
-------------------
`Посмотреть примеры и решить задачу <http://en.wikipedia.org/wiki/Hyperlink>`_